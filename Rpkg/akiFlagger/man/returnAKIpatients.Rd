% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/returnAKIpatients.R
\name{returnAKIpatients}
\alias{returnAKIpatients}
\title{Main logic for calculating and returning patients with AKI}
\usage{
returnAKIpatients(
  dataframe,
  RM_window = TRUE,
  HB_trumping = FALSE,
  eGFR_impute = FALSE,
  padding = c(4L, "hours"),
  window1 = c(2L, "days"),
  window2 = c(7L, "days"),
  addIntermediateCols = FALSE,
  returnMinimalInput = FALSE
)
}
\arguments{
\item{dataframe}{Your input dataset, of class c(data.table, data.frame).}

\item{RM_window}{Boolean definition selector, whether you would like to implement the rolling-minimum window \href{https://akiflagger.readthedocs.io/}{(RMW)} definition.}

\item{HB_trumping}{Boolean definition selector, whether you would like to implement the Historical Baseline Trumping \href{https://akiflagger.readthedocs.io/}{(HBT)} definition.}

\item{eGFR_impute}{Boolean definition selector, whether you would like to implement the Baseline Creatinine Imputation \href{https://akiflagger.readthedocs.io/}{(BCI)} definition.}

\item{padding}{The amount of padding you would like to add to the rolling windows. Enter this as a c(\code{integer}, \code{string}) vector where
\code{integer} is the amount of time and \code{string} are the units of time. Defaults to \code{c(4L, "hours")}.}

\item{window1, window2}{The amount of time in the shorter and longer rolling windows, respectively. The default values are 48 and 172 hours (2 and 7 days), respectively.
The vector (same format as \code{\link{padding}}) is fed into a \code{difftime()} object.}

\item{addIntermediateCols}{Boolean selector, whether you would like to add in the intermediate columns generated during calculation; namely the minimum creatinine & the baseline creatinines.
Defaults to \code{FALSE}.}

\item{returnMinimalInput}{Boolean selector, whether to return a minimal version of the flagger input.}
}
\value{

}
\description{
Main logic for calculating and returning patients with AKI
}
\examples{
returnAKIpatients(toy)
}
